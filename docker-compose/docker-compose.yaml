version: '3.8'

services:
  vault:
    container_name: vault
    image: vault

    volumes:
      - $PWD/logs/:/tmp/logs
      - ./vault:/scripts
    cap_add:
      - IPC_LOCK
    # mounted from the ./vault folder
    command: /scripts/vault.sh
    ports:
      - 8200:8200
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: testing-token
      VAULT_ADDR: http://0.0.0.0:8200
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200

  mongodb:
    container_name: app_db
    image: 'bitnami/mongodb:4.0'
    ports:
      - '27027:27017'
    volumes:
      - 'mongodb_data:/bitnami'
    environment:
      MONGODB_USERNAME: admin
      MONGODB_PASSWORD: password
      MONGODB_DATABASE: files
      MONGODB_ROOT_PASSWORD: password123

  ################################
  ####  Elastic containers    ####
  ################################
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    ports:
      - 9200:9200
    volumes:
      - es_data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - cluster.name=files.elasticsearch
      - 'ES_JAVA_OPTS=-Xms512m -Xmx2048m'
      - path.repo=/usr/share/elasticsearch

  kibana:
    image: 'kibana:7.5.0'
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

  rollcall:
    image: overture/rollcall:2.6.0
    depends_on:
      - elasticsearch
    ports:
      - '9001:9001'
    environment:
      ELASTICSEARCH_NODE: http://elasticsearch:9200
      SPRING_PROFILES_ACTIVE: test
      SERVER_PORT: 9001
      ROLLCALL_ALIASES_0_ALIAS: file_centric
      ROLLCALL_ALIASES_0_ENTITY: file
      ROLLCALL_ALIASES_0_TYPE: centric
      ROLLCALL_ALIASES_0_RELEASEROTATION: 2
      SPRING_CLOUD_VAULT_ENABLED: 'false'

  ################################
  ####    KAFKA containers    ####
  ################################
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181

  # see : https://docs.confluent.io/current/quickstart/ce-docker-quickstart.html#ce-docker-quickstart
  broker:
    image: confluentinc/cp-kafka:5.4.0
    hostname: kafka.fs.dev
    container_name: kafka.fs.dev
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka.fs.dev:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka.fs.dev:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kafka:/kafka

  rest-proxy:
    image: confluentinc/cp-kafka-rest:5.4.0
    depends_on:
      - zookeeper
      - broker
    ports:
      - 8082:8082
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka.fs.dev:29092
      KAFKA_REST_LISTENERS: 'http://0.0.0.0:8082'

  control-center:
    image: confluentinc/cp-enterprise-control-center:5.4.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - zookeeper
      - broker
    ports:
      - '9021:9021'
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

volumes:
  mongodb_data:
    name: appdb_db_vol
    driver: local
  es_data:
    name: es_data_vol
    driver: local
