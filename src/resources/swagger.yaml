# /*
#  * Copyright (c) 2020 The Ontario Institute for Cancer Research. All rights reserved
#  *
#  * This program and the accompanying materials are made available under the terms of
#  * the GNU Affero General Public License v3.0. You should have received a copy of the
#  * GNU Affero General Public License along with this program.
#  *  If not, see <http://www.gnu.org/licenses/>.
#  *
#  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
#  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
#  * SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#  * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
#  * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#  */

openapi: 3.0.0
info:
  title: Files Service
  version: 0.1.0
security:
  - bearerAuth: []
paths:
  /health:
    get:
      tags:
        - Health
      summary: get status of app and various app components
      responses:
        '500':
          description: 'app is not fully healthy'
        '200':
          description: 'all components reporting healthy status'
          content:
            application/json:
              schema:
                type: object
  /files:
    get:
      parameters:
        - name: analysisId
          description: list of analysis ids, csv
          in: query
          required: false
          schema:
            type: string
            format: csv
        - name: objectId
          description: list of file object Ids, csv
          in: query
          required: false
          schema:
            type: string
            format: csv
        - name: programId
          description: list of file program Ids, csv
          in: query
          required: false
          schema:
            type: string
            format: csv
      tags:
        - Files
      summary: get all files, filtered by the query parameters if provided
      responses:
        '404':
          description: Requested resource not found
        '400':
          description: Invalid parameters or body request
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/ServerError'
        '200':
          description: File object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
    post:
      tags:
        - Files
      summary: create a File or just fetch it if the object id exists
      description: creates a file, if the file already exists (same obj Id) it will just fetch it.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
      responses:
        '404':
          description: Requested resource not found
        '400':
          description: Invalid parameters or body request
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/ServerError'
        '200':
          description: 'the file that was created or found already.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
  /files/{id}:
    get:
      parameters:
        - name: id
          description: id of the file to get
          in: path
          required: true
          schema:
            type: string
      tags:
        - Files
      summary: get file by Id
      responses:
        '404':
          description: Requested resource not found
        '400':
          description: Invalid parameters or body request
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/ServerError'
        '200':
          description: File object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'

  /files/{id}/labels:
    parameters:
      - name: id
        description: argo id of the file to update labels for
        in: path
        required: true
        schema:
          type: string
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Labels'
      tags:
        - Files
      summary: update / create labels for a file
      responses:
        '404':
          description: Requested resource not found
        '400':
          description: Invalid parameters or body request
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/ServerError'
        '200':
          description: update successful
    delete:
      tags:
        - Files
      parameters:
        - name: keys
          description: list of key labels to delete, csv format
          in: query
          required: true
          schema:
            type: string
            format: csv
      responses:
        '404':
          description: Requested resource not found
        '400':
          description: Invalid parameters or body request
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/ServerError'
        '200':
          description: delete successful
components:
  responses:
    ServiceUnavailableError:
      description: Endpoint service unavailable
    UnauthorizedError:
      description: Access token is missing or invalid
    ServerError:
      description: Server error
    ForbiddenError:
      description: Access token has incorrect scopes
    NotFoundError:
      description: Requested resource was not found
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    File:
      type: object
      properties:
        fileId:
          type: number
        objectId:
          type: string
        repoId:
          type: string
        programId:
          type: string
        analysisId:
          type: string
        labels:
          $ref: '#/components/schemas/Labels'
    Labels:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
        example:
          - value 1
